{"version":3,"sources":["../../src/routes/imageupload.js"],"names":["express","require","aws","multerS3","multer","path","url","s3","S3","accessKeyId","secretAccessKey","Bucket","profileImgUpload","storage","bucket","acl","key","req","file","cb","basename","originalname","extname","Date","now","limits","fileSize","fileFilter","checkFileType","single","filetypes","test","toLowerCase","mimetype","documentUpload","checkFileTypeDoc","module","exports","app","post","res","error","json","undefined","console","log","imageName","imageLocation","location"],"mappings":"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","file":"imageupload.js","sourcesContent":["const express = require( 'express' );\r\nconst aws = require( 'aws-sdk' );\r\nconst multerS3 = require( 'multer-s3' );\r\nconst multer = require('multer');\r\nconst path = require( 'path' );\r\nconst url = require('url');\r\n\r\n/**\r\n * PROFILE IMAGE STORING STARTS\r\n */\r\nconst s3 = new aws.S3({\r\n    accessKeyId: 'AKIATMSCUAV2WOSS5ENE',\r\n    secretAccessKey: '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',\r\n    Bucket: 'pcimageupload'\r\n   });\r\n\r\n/**\r\n * Single Upload\r\n */\r\nconst profileImgUpload = multer({\r\n    storage: multerS3({\r\n     s3: s3,\r\n     bucket: 'pcimageupload',\r\n     acl: 'public-read',\r\n     key: function (req, file, cb) {\r\n      cb(null, path.basename( file.originalname, path.extname( file.originalname ) ) + '-' + Date.now() + path.extname( file.originalname ) )\r\n     }\r\n    }),\r\n    limits:{ fileSize: 2000000 }, // In bytes: 2000000 bytes = 2 MB\r\n    fileFilter: function( req, file, cb ){\r\n     checkFileType( file, cb );\r\n    }\r\n   }).single('profileImage');\r\n\r\n\r\n   function checkFileType( file, cb ){\r\n    // Allowed ext\r\n    const filetypes = /jpeg|jpg|png|gif/;\r\n    // Check ext\r\n    const extname = filetypes.test( path.extname( file.originalname ).toLowerCase());\r\n    // Check mime\r\n    const mimetype = filetypes.test( file.mimetype );if( mimetype && extname ){\r\n     return cb( null, true );\r\n    } else {\r\n     cb( 'Error: Images Only!' );\r\n    }\r\n   }\r\n\r\n\r\n   \r\n/**\r\n *  Document upload\r\n */\r\nconst documentUpload = multer({\r\n  storage: multerS3({\r\n   s3: s3,\r\n   bucket: 'pcimageupload',\r\n   acl: 'public-read',\r\n   key: function (req, file, cb) {\r\n    cb(null, path.basename( file.originalname, path.extname( file.originalname ) ) + '-' + Date.now() + path.extname( file.originalname ) )\r\n   }\r\n  }),\r\n  limits:{ fileSize: 2000000 }, // In bytes: 2000000 bytes = 2 MB\r\n  fileFilter: function( req, file, cb ){\r\n   checkFileTypeDoc( file, cb );\r\n  }\r\n }).single('document');\r\n\r\n\r\n function checkFileTypeDoc( file, cb ){\r\n  // Allowed ext\r\n  const filetypes = /pdf|csv|xls|doc/;\r\n  // Check ext\r\n  const extname = filetypes.test( path.extname( file.originalname ).toLowerCase());\r\n  // Check mime\r\n  const mimetype = filetypes.test( file.mimetype );if( mimetype && extname ){\r\n   return cb( null, true );\r\n  } else {\r\n   cb( 'Error: Document Only!' );\r\n  }\r\n }\r\n\r\nmodule.exports = (app) => {\r\n\r\n    app.post('/api/imageupload/profile-img-upload', ( req, res ) => {profileImgUpload( req, res, ( error ) => {\r\n      //  console.log( 'error', error );\r\n        if( error ){\r\n         // console.log( 'errors', error );\r\n         res.json( { error: error } );\r\n        } else {\r\n         // If File not found\r\n         if( req.file === undefined ){\r\n          console.log( 'Error: No File Selected!' );\r\n          res.json( 'Error: No File Selected' );\r\n         } else {\r\n          // If Success\r\n          const imageName = req.file.key;\r\n          const imageLocation = req.file.location; \r\n          res.json({\r\n            imageName,imageLocation\r\n          })\r\n         }\r\n        }\r\n       });\r\n      });// End of single profile upload/**\r\n\r\n\r\n\r\n      app.post('/api/document/documentUpload', ( req, res ) => {documentUpload( req, res, ( error ) => {\r\n     //   console.log( 'error', error );\r\n        if( error ){\r\n         console.log( 'errors', error );\r\n         res.json( { error: error } );\r\n        } else {\r\n         // If File not found\r\n         if( req.file === undefined ){\r\n          console.log( 'Error: No File Selected!' );\r\n          res.json( 'Error: No File Selected' );\r\n         } else {\r\n          // If Success\r\n          const imageName = req.file.key;\r\n          const imageLocation = req.file.location; \r\n          res.json({\r\n            imageName,imageLocation\r\n          })\r\n         }\r\n        }\r\n       });\r\n      });// End of single profile upload/**\r\n\r\n    \r\n}"]}