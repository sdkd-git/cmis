{"version":3,"sources":["../../src/controllers/getMaster.js"],"names":["pc_countrystates","db","pc_cities","pc_districts","pc_dharms","pc_kalams","pc_acts","pc_crimetypes","pc_crimetitles","pc_status","getMaster","req","res","id","findAll","where","then","json","catch","status","err","getCity","getDistricts","console","log","params","CityId","cityId","getDharm","getKalam","getKayda","getKalamById","actId","act_cd","getCrimeType","getCrimeTitle","getStatus"],"mappings":"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","file":"getMaster.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport passport from 'passport';\r\n\r\nimport db from '../models';\r\nconst pc_countrystates = db.pc_countrystates;\r\nconst pc_cities = db.pc_cities;\r\nconst pc_districts = db.pc_districts;\r\nconst pc_dharms = db.pc_dharms;\r\nconst pc_kalams = db.pc_kalams;\r\nconst pc_acts = db.pc_acts;\r\nconst pc_crimetypes = db.pc_crimetypes;\r\nconst pc_crimetitles = db.pc_crimetitles;\r\nconst pc_status = db.pc_status;\r\n\r\nconst getMaster = (req, res) => {\r\n  const id = '121';\r\n  pc_countrystates.findAll({\r\n      where: {\r\n        id\r\n      }\r\n    })\r\n    .then(pc_countrystates => {\r\n      res.json({\r\n        pc_countrystates\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\nconst getCity = (req, res) => {\r\n  pc_cities.findAll()\r\n    .then(pc_cities => {\r\n      res.json({\r\n        pc_cities\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\nconst getDistricts = (req, res) => {\r\n  console.log(req.params)\r\n  const CityId = req.params.cityId;\r\n  pc_districts.findAll({\r\n      where: {\r\n        CityId\r\n      }\r\n    })\r\n    .then(pc_districts => {\r\n      res.json({\r\n        pc_districts\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\nconst getDharm = (req, res) => {\r\n  pc_dharms.findAll()\r\n    .then(pc_dharms => {\r\n      res.json({\r\n        pc_dharms\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\nconst getKalam = (req, res) => {\r\n  pc_kalams.findAll()\r\n    .then(pc_kalams => {\r\n      res.json({\r\n        pc_kalams\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\nconst getKayda = (req, res) => {\r\n  // const limit = req.params.limit;\r\n  // const offset = req.params.offset;\r\n\r\n  // let paramQuerySQL = {\r\n  //   offset:parseInt(offset),\r\n  //   limit:parseInt(limit)\r\n  // }\r\n\r\n  // console.log(paramQuerySQL,req.params)\r\n  // pc_acts.findAndCountAll(paramQuerySQL).then(apis => res.json({\r\n  //   error: false,\r\n  //   count: apis.count,\r\n  //   data: apis.rows,\r\n  // })).catch(err => res.status(500).json({\r\n  //   err\r\n  // }));\r\n\r\n\r\n  pc_acts.findAll()\r\n    .then(pc_acts => {\r\n      res.json({\r\n        pc_acts\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\n\r\nconst getKalamById = (req,res) =>{\r\nconst id = req.params.actId;\r\n  pc_kalams.findAll({\r\n    where: {\r\n      act_cd: id\r\n    }\r\n  })\r\n  .then(pc_kalams => {\r\n    res.json({\r\n      pc_kalams\r\n    });\r\n  })\r\n  .catch(err => res.status(500).json({\r\n    err\r\n  }));\r\n} \r\n\r\n\r\nconst getCrimeType = (req, res) => {\r\n  pc_crimetypes.findAll()\r\n    .then(pc_crimetypes => {\r\n      res.json({\r\n        pc_crimetypes\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\nconst getCrimeTitle = (req, res) => {\r\n  pc_crimetitles.findAll()\r\n    .then(pc_crimetitles => {\r\n      res.json({\r\n        pc_crimetitles\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\nconst getStatus = (req, res) => {\r\n  pc_status.findAll()\r\n    .then(pc_status => {\r\n      res.json({\r\n        pc_status\r\n      });\r\n    })\r\n    .catch(err => res.status(500).json({\r\n      err\r\n    }));\r\n};\r\n\r\nexport {\r\n  getMaster,\r\n  getCity,\r\n  getDistricts,\r\n  getDharm,\r\n  getKalam,\r\n  getKayda,\r\n  getCrimeType,\r\n  getCrimeTitle,\r\n  getStatus,\r\n  getKalamById\r\n}"]}