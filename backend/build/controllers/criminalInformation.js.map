{"version":3,"sources":["../../src/controllers/criminalInformation.js"],"names":["multer","require","path","PC_KKInformation","db","PC_OtherInformation","PC_BasicInformation","PC_GunhaInformation","PC_Members","createCriminalInformation","req","res","isSuccess","currentUser","body","currentuser","basicInformationNewObj","basicInformation","heading","toString","userId","id","create","baseInfoRes","masterId","JSON","parse","otherInformationNewObj","otherInformation","accusedImage","accusedPham","accusedRecords","otherInfoRes","gunhaInformation","forEach","item","index","gunhaInformationNewObj","gunhaRes","kalamAndkayda","map","item2","ob","gunhaId","kkRes","membersList","membersReq","gunhaInfor","json","status","message","basicInfo","otherInfo","getCriminalsById","params","findAll","where","gunhaInformationoOb1","kkInfo","membersRes","data","isDone","all","then","getCriminalsTableInfoById","updateCriminal","basicInfoReq","update","getOtherInfor","length","te","getGunhaInfor","element","destroy"],"mappings":"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","file":"criminalInformation.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport passport from 'passport';\r\n\r\n \r\nconst multer = require('multer');\r\nconst path = require('path');\r\n \r\nimport _ from \"lodash\";\r\nimport db from '../models';\r\n\r\n\r\n\r\n \r\nconst PC_KKInformation = db.PC_KKInformation;\r\nconst PC_OtherInformation = db.PC_OtherInformation;\r\nconst PC_BasicInformation = db.PC_BasicInformation;\r\nconst PC_GunhaInformation = db.PC_GunhaInformation;\r\nconst PC_Members = db.PC_Members;\r\n\r\nconst createCriminalInformation = async (req, res) => {\r\n    let isSuccess = false;\r\n    const currentUser = req.body.currentuser;\r\n\r\n    const basicInformationNewObj = {\r\n        ...req.body.basicInformation,\r\n        heading: req.body.basicInformation.heading.toString(),\r\n        userId: currentUser.id\r\n    }\r\n\r\n    const baseInfoRes = await PC_BasicInformation.create(basicInformationNewObj);\r\n    const masterId = JSON.parse(JSON.stringify(baseInfoRes)).id;\r\n    isSuccess = masterId ? true : false;\r\n    // console.log('--------------------------',masterId)\r\n    // console.log('--------------------------',JSON.parse(masterId).id)\r\n    // console.log(JSON.stringify(baseInfoRes))\r\n\r\n    const otherInformationNewObj = {\r\n        ...req.body.otherInformation,\r\n        accusedImage: req.body.otherInformation.accusedImage.toString(),\r\n        accusedPham: req.body.otherInformation.accusedPham.toString(),\r\n        accusedRecords: req.body.otherInformation.accusedRecords.toString(),\r\n        masterId: masterId,\r\n        userId: currentUser.id\r\n    }\r\n    const otherInfoRes = await PC_OtherInformation.create(otherInformationNewObj);\r\n\r\n    isSuccess = JSON.parse(JSON.stringify(otherInfoRes)).id ? true : false;\r\n\r\n    req.body.gunhaInformation && req.body.gunhaInformation.forEach(async (item, index) => {\r\n        // console.log(item);\r\n        let gunhaInformationNewObj = {\r\n            ...item,\r\n            masterId: masterId,\r\n            userId: currentUser.id\r\n        }\r\n        let gunhaRes = await PC_GunhaInformation.create(gunhaInformationNewObj);\r\n        isSuccess = JSON.parse(JSON.stringify(gunhaRes)).id ? true : false;\r\n        item.kalamAndkayda.map((item2) => {\r\n            let ob = {\r\n                ...item2,\r\n                masterId: masterId,\r\n                gunhaId: JSON.parse(JSON.stringify(gunhaRes)).id,\r\n                userId: currentUser.id\r\n            }\r\n            //   console.log(ob);\r\n            let kkRes = PC_KKInformation.create(ob);\r\n            isSuccess = JSON.parse(JSON.stringify(kkRes)).id ? true : false;\r\n            //    console.log(resKK);\r\n        })\r\n\r\n        item.membersList.map((item2) => {\r\n            let ob = {\r\n                ...item2,\r\n                masterId: masterId,\r\n                gunhaId: JSON.parse(JSON.stringify(gunhaRes)).id,\r\n                userId: currentUser.id\r\n            }\r\n            //   console.log(ob);\r\n            let membersReq = PC_Members.create(ob);\r\n            isSuccess = JSON.parse(JSON.stringify(membersReq)).id ? true : false;\r\n            //    console.log(resKK);\r\n        })\r\n    })\r\n\r\n    const gunhaInfor = {\r\n        ...req.body.gunhaInformation[0],\r\n        masterId: masterId,\r\n        userId: currentUser.id,\r\n    }\r\n\r\n    if (isSuccess) {\r\n        res.json({\r\n            status: 200,\r\n            message: 'success',\r\n            basicInfo: [JSON.parse(JSON.stringify(baseInfoRes))],\r\n            otherInfo: [JSON.parse(JSON.stringify(otherInfoRes))],\r\n            gunhaInfor: [JSON.parse(JSON.stringify(gunhaInfor))]\r\n        });\r\n    } else {\r\n        res.json({\r\n            status: 300,\r\n            message: 'failed'\r\n        });\r\n    }\r\n\r\n    // PC_ProfessionalsBasic.create(req.body)\r\n    //     .then((professional) => {\r\n    //         res.json({\r\n    //             professional\r\n    //         })\r\n    //     })\r\n    //     .catch((error) => {\r\n    //         res.json({});\r\n    //     })\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst getCriminalsById = async (req, res) => {\r\n    const id = req.params.id;\r\n\r\n\r\n    let basicInfo = await PC_BasicInformation.findAll({\r\n        where: {\r\n            id\r\n        }\r\n    });\r\n\r\n    let gunhaInfor = await PC_GunhaInformation.findAll({\r\n        where: {\r\n            masterId: id\r\n        }\r\n    });\r\n\r\n\r\n    let otherInfo = await PC_OtherInformation.findAll({\r\n        where: {\r\n            masterId: id\r\n        }\r\n    });\r\n\r\n\r\n    // console.log(JSON.parse(JSON.stringify(gunhaInfor)));\r\n\r\n    let gunhaInformationoOb1 = [];\r\n\r\n    let ob = JSON.parse(JSON.stringify(gunhaInfor)) && JSON.parse(JSON.stringify(gunhaInfor)).map(async (item) => {\r\n        let kkInfo = await PC_KKInformation.findAll({\r\n            where: {\r\n                gunhaId: item.id,\r\n                // masterId:JSON.parse(JSON.stringify(basicInfo)).id,\r\n                // gunhaId:JSON.parse(JSON.stringify(gunhaInfor)).id\r\n            }\r\n        });\r\n        let membersRes = await PC_Members.findAll({\r\n            where: {\r\n                gunhaId: item.id,\r\n                // masterId:JSON.parse(JSON.stringify(basicInfo)).id,\r\n                // gunhaId:JSON.parse(JSON.stringify(gunhaInfor)).id\r\n            }\r\n        });\r\n        // console.log(kkInfo)\r\n\r\n        return {\r\n            ...item,\r\n            kalamAndkayda: JSON.parse(JSON.stringify(kkInfo)),\r\n            membersList: JSON.parse(JSON.stringify(membersRes))\r\n        };\r\n    })\r\n\r\n    // let self = this;\r\n    let data = {}\r\n    let isDone = Promise.all(ob);\r\n    await isDone.then((res) => {\r\n        data = {\r\n            basicInfo: [...basicInfo],\r\n            otherInfo: [...otherInfo],\r\n            gunhaInfor: [...res]\r\n        }\r\n\r\n    })\r\n\r\n    res.json(\r\n        data\r\n\r\n    );\r\n}\r\n\r\nconst getCriminalsTableInfoById = async (req, res) => {\r\n    const id = req.params.id;\r\n    let basicInfo = await PC_BasicInformation.findAll({\r\n        where: {\r\n            userId: id\r\n        }\r\n    });\r\n    res.json(\r\n        JSON.parse(JSON.stringify(basicInfo))\r\n    );\r\n}\r\n\r\n\r\n\r\nconst updateCriminal = async (req, res) => {\r\n    const id = req.params.id;\r\n    const currentUser = req.body.currentuser;\r\n\r\n\r\n    let basicInfoReq = {\r\n        ...req.body.basicInformation,\r\n        heading: req.body.basicInformation.heading.toString(),\r\n    }\r\n\r\n    let basicInfo = await PC_BasicInformation.update(basicInfoReq, {\r\n        where: {\r\n            id\r\n        }\r\n    })\r\n\r\n\r\n    let getOtherInfor = await PC_OtherInformation.findAll({\r\n        where: {\r\n            userId: currentUser.id,\r\n            masterId: id,\r\n        }\r\n    });\r\n\r\n  \r\n    if (!JSON.parse(JSON.stringify(getOtherInfor)).length) {\r\n        const otherInformationNewObj = {\r\n            ...req.body.otherInformation,\r\n            accusedImage: req.body.otherInformation.accusedImage.toString(),\r\n            accusedPham: req.body.otherInformation.accusedPham.toString(),\r\n            accusedRecords: req.body.otherInformation.accusedRecords.toString(),\r\n            masterId: id,\r\n            userId: currentUser.id\r\n        }\r\n        await PC_OtherInformation.create(otherInformationNewObj)\r\n    } else {\r\n \r\n        let te = {\r\n            ...req.body.otherInformation,\r\n            accusedImage: req.body.otherInformation.accusedImage.toString(),\r\n            accusedPham: req.body.otherInformation.accusedPham.toString(),\r\n            accusedRecords:req.body.otherInformation.accusedRecords.toString(),\r\n        }\r\n        // console.log('Test..........................................',te)\r\n        await PC_OtherInformation.update(te, {\r\n            where: {\r\n                masterId: id,\r\n                userId: currentUser.id,\r\n            }\r\n        })\r\n    }\r\n\r\n    let getGunhaInfor = await PC_GunhaInformation.findAll({\r\n        where: {\r\n            userId: currentUser.id,\r\n            masterId: id,\r\n        }\r\n    });\r\n\r\n\r\n    if (JSON.parse(JSON.stringify(getGunhaInfor)).length) {\r\n        JSON.parse(JSON.stringify(getGunhaInfor)).forEach(async element => {\r\n            await PC_KKInformation.destroy({\r\n                where: {\r\n                    masterId: id,\r\n                    gunhaId: element.id\r\n                }\r\n            })\r\n\r\n            await PC_Members.destroy({\r\n                where: {\r\n                    masterId: id,\r\n                    gunhaId: element.id\r\n                }\r\n            })\r\n        });\r\n\r\n        await PC_GunhaInformation.destroy({\r\n            where: {\r\n                masterId: id,\r\n                userId: currentUser.id\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    req.body.gunhaInformation && req.body.gunhaInformation.forEach(async (item, index) => {\r\n        let gunhaInformationNewObj = {\r\n            ...item,\r\n            masterId: id,\r\n            userId: currentUser.id\r\n        }\r\n\r\n        let gunhaRes = await PC_GunhaInformation.create(gunhaInformationNewObj);\r\n\r\n        // isSuccess = JSON.parse(JSON.stringify(gunhaRes)).id ? true : false;\r\n        item && item.kalamAndkayda.map((item2) => {\r\n            let ob = {\r\n                ...item2,\r\n                masterId: id,\r\n                gunhaId: JSON.parse(JSON.stringify(gunhaRes)).id,\r\n                userId: currentUser.id\r\n            }\r\n            //   console.log(ob);\r\n            let kkRes = PC_KKInformation.create(ob);\r\n            // isSuccess = JSON.parse(JSON.stringify(kkRes)).id ? true : false;\r\n            //    console.log(resKK);\r\n        })\r\n\r\n        item && item.membersList.map((item2) => {\r\n            let ob = {\r\n                ...item2,\r\n                masterId: id,\r\n                gunhaId: JSON.parse(JSON.stringify(gunhaRes)).id,\r\n                userId: currentUser.id\r\n            }\r\n            //   console.log(ob);\r\n            let membersReq = PC_Members.create(ob);\r\n            \r\n            //    console.log(resKK);\r\n        })\r\n    })\r\n\r\n\r\n    let data = {\r\n        basicInfo: [basicInfoReq],\r\n        otherInfo: [req.body.otherInformation],\r\n        gunhaInfor: [...req.body.gunhaInformation]\r\n    }\r\n\r\n    res.json(\r\n        data\r\n    );\r\n\r\n};\r\n \r\n\r\n\r\n\r\n// const uploadImages = (req, res) => {\r\n\r\n    \r\n//     console.log(req)\r\n\r\n//     // // 'profile_pic' is the name of our file input field in the HTML form\r\n//     let upload = multer({\r\n//         storage: storage,\r\n//     }).single('image');\r\n\r\n//     upload(req, res, function (err) {\r\n//         // req.file contains information of uploaded file\r\n//         // req.body contains information of text fields, if there were any\r\n//         console.log(req.image)\r\n\r\n//         if (req.fileValidationError) {\r\n//             return res.send(req.fileValidationError);\r\n//         } else if (!req.file) {\r\n//             return res.send('Please select an image to upload');\r\n//         } else if (err instanceof multer.MulterError) {\r\n//             return res.send(err);\r\n//         } else if (err) {\r\n//             return res.send(err);\r\n//         }\r\n\r\n//         // Display uploaded image for user validation\r\n//         res.send(`You have uploaded this image: <hr/><img src=\"${req.file.path}\" width=\"500\"><hr /><a href=\"./\">Upload another image</a>`);\r\n//     });\r\n\r\n// }\r\n\r\n\r\nexport {\r\n    createCriminalInformation,\r\n    getCriminalsById,\r\n    updateCriminal,\r\n    getCriminalsTableInfoById\r\n};"]}