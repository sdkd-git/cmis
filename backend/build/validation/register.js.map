{"version":3,"sources":["../../src/validation/register.js"],"names":["validateRegisterForm","data","errors","firstname","lastname","role","username","email","password","Validator","isLength","min","max","isEmpty","isEmail","isValid"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,oBAAT,CAA8BC,IAA9B,EAAoC;AAClC,MAAIC,SAAS,EAAb;AACAD,OAAKE,SAAL,GAAiB,CAAC,uBAAQF,KAAKE,SAAb,CAAD,GAA2BF,KAAKE,SAAhC,GAA4C,EAA7D;AACAF,OAAKG,QAAL,GAAgB,CAAC,uBAAQH,KAAKG,QAAb,CAAD,GAA0BH,KAAKG,QAA/B,GAA0C,EAA1D;AACAH,OAAKI,IAAL,GAAY,CAAC,uBAAQJ,KAAKI,IAAb,CAAD,GAAsBJ,KAAKI,IAA3B,GAAkC,EAA9C;AACAJ,OAAKK,QAAL,GAAgB,CAAC,uBAAQL,KAAKK,QAAb,CAAD,GAA0BL,KAAKK,QAA/B,GAA0C,EAA1D;AACAL,OAAKM,KAAL,GAAa,CAAC,uBAAQN,KAAKM,KAAb,CAAD,GAAuBN,KAAKM,KAA5B,GAAoC,EAAjD;AACAN,OAAKO,QAAL,GAAgB,CAAC,uBAAQP,KAAKO,QAAb,CAAD,GAA0BP,KAAKO,QAA/B,GAA0C,EAA1D;;AAEA,MAAI,CAACC,oBAAUC,QAAV,CAAmBT,KAAKE,SAAxB,EAAmC,EAAEQ,KAAK,CAAP,EAAUC,KAAK,EAAf,EAAnC,CAAL,EAA8D;AAC5DV,WAAOC,SAAP,GAAmB,oDAAnB;AACD;;AAED,MAAI,CAACM,oBAAUC,QAAV,CAAmBT,KAAKG,QAAxB,EAAkC,EAAEO,KAAK,CAAP,EAAUC,KAAK,EAAf,EAAlC,CAAL,EAA6D;AAC3DV,WAAOE,QAAP,GAAkB,mDAAlB;AACD;;AAED,MAAIK,oBAAUI,OAAV,CAAkBZ,KAAKE,SAAvB,CAAJ,EAAuC;AACrCD,WAAOC,SAAP,GAAmB,8BAAnB;AACD;;AAED,MAAIM,oBAAUI,OAAV,CAAkBZ,KAAKG,QAAvB,CAAJ,EAAsC;AACpCF,WAAOE,QAAP,GAAkB,6BAAlB;AACD;;AAED,MAAIK,oBAAUI,OAAV,CAAkBZ,KAAKI,IAAvB,CAAJ,EAAkC;AAChCH,WAAOG,IAAP,GAAc,wBAAd;AACD;;AAED,MAAII,oBAAUI,OAAV,CAAkBZ,KAAKK,QAAvB,CAAJ,EAAsC;AACpCJ,WAAOI,QAAP,GAAkB,4BAAlB;AACD;;AAED,MAAIG,oBAAUI,OAAV,CAAkBZ,KAAKM,KAAvB,CAAJ,EAAmC;AACjCL,WAAOK,KAAP,GAAe,yBAAf;AACD;;AAED,MAAI,CAACE,oBAAUK,OAAV,CAAkBb,KAAKM,KAAvB,CAAL,EAAoC;AAClCL,WAAOK,KAAP,GAAe,kBAAf;AACD;;AAED,MAAIE,oBAAUI,OAAV,CAAkBZ,KAAKO,QAAvB,CAAJ,EAAsC;AACpCN,WAAOM,QAAP,GAAkB,4BAAlB;AACD;;AAED,MAAI,CAACC,oBAAUC,QAAV,CAAmBT,KAAKO,QAAxB,EAAkC,EAAEG,KAAK,CAAP,EAAUC,KAAK,EAAf,EAAlC,CAAL,EAA6D;AAC3DV,WAAOM,QAAP,GAAkB,6CAAlB;AACD;;AAED,SAAO;AACLN,kBADK;AAELa,aAAS,uBAAQb,MAAR;AAFJ,GAAP;AAID;;kBAEcF,oB","file":"register.js","sourcesContent":["import Validator from 'validator';\r\nimport isEmpty from './isEmpty';\r\n\r\nfunction validateRegisterForm(data) {\r\n  let errors = {};\r\n  data.firstname = !isEmpty(data.firstname) ? data.firstname : '';\r\n  data.lastname = !isEmpty(data.lastname) ? data.lastname : '';\r\n  data.role = !isEmpty(data.role) ? data.role : '';\r\n  data.username = !isEmpty(data.username) ? data.username : '';\r\n  data.email = !isEmpty(data.email) ? data.email : '';\r\n  data.password = !isEmpty(data.password) ? data.password : '';\r\n\r\n  if (!Validator.isLength(data.firstname, { min: 2, max: 30 })) {\r\n    errors.firstname = 'First Name must be between 2 and 30 character long';\r\n  }\r\n\r\n  if (!Validator.isLength(data.lastname, { min: 2, max: 30 })) {\r\n    errors.lastname = 'Last Name must be between 2 and 30 character long';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.firstname)) {\r\n    errors.firstname = 'First Name field is required';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.lastname)) {\r\n    errors.lastname = 'Last Name field is required';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.role)) {\r\n    errors.role = 'Role field is required';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.username)) {\r\n    errors.username = 'username field is required';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.email)) {\r\n    errors.email = 'email field is required';\r\n  }\r\n\r\n  if (!Validator.isEmail(data.email)) {\r\n    errors.email = 'email is invalid';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.password)) {\r\n    errors.password = 'password field is required';\r\n  }\r\n\r\n  if (!Validator.isLength(data.password, { min: 6, max: 30 })) {\r\n    errors.password = 'password must be at least 6 characters long';\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors),\r\n  };\r\n};\r\n\r\nexport default validateRegisterForm;"]}